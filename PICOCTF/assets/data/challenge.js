export const challenges = [
    // üß© FORENSICS (Total: 15)
    { id: 1, category: 'Forensics', name: 'Verify', description: 'People keep trying to trick my players with imitation flags. I want to make sure they get the real deal!', difficulty: 'easy', points: 100, solves: 234, hint: 'Check the file signature and metadata', file: 'verify.zip', solved: false },
    { id: 2, category: 'Forensics', name: 'Scan Surprise', description: 'I scanned a document, but something seems off. Can you find what is hidden?', difficulty: 'easy', points: 150, solves: 189, hint: 'Look for steganography techniques', file: 'scan.pdf', solved: false },
    { id: 3, category: 'Forensics', name: 'Binary Search', description: 'Use increasing/decreasing messages to guide your binary search for the flag.', difficulty: 'medium', points: 250, solves: 145, hint: 'Use binary search algorithm efficiently', file: 'search.py', solved: false },
    { id: 9, category: 'Forensics', name: 'Disk Sleuth', description: 'An image of a USB drive was recovered. Can you extract the hidden flag?', difficulty: 'hard', points: 400, solves: 80, hint: 'Try mounting the image and inspecting deleted files', file: 'usb.img', solved: false },
    { id: 10, category: 'Forensics', name: 'Packet Detective', description: 'We captured some suspicious network traffic. Can you find the flag?', difficulty: 'medium', points: 200, solves: 210, hint: 'Use Wireshark to filter HTTP packets', file: 'capture.pcap', solved: false },
    { id: 24, category: 'Forensics', name: 'Photo Secrets', description: 'The image looks normal, but something is embedded.', difficulty: 'easy', points: 100, solves: 312, hint: 'Try running strings or binwalk on the image', file: 'photo.jpg', solved: false },
    { id: 25, category: 'Forensics', name: 'Audio Clues', description: 'Listen closely... maybe there‚Äôs a message hidden in the sound.', difficulty: 'medium', points: 250, solves: 97, hint: 'Try spectrogram analysis', file: 'clue.wav', solved: false },
    { id: 26, category: 'Forensics', name: 'Log Hunt', description: 'The logs show strange user activity. Track the intruder.', difficulty: 'medium', points: 200, solves: 167, hint: 'Look for suspicious IP or commands', file: 'logs.txt', solved: false },
    { id: 27, category: 'Forensics', name: 'Corrupted Archive', description: 'A corrupted zip file hides the flag.', difficulty: 'hard', points: 400, solves: 62, hint: 'Try repair tools or hex editing', file: 'broken.zip', solved: false },
    { id: 28, category: 'Forensics', name: 'Hidden Layers', description: 'An image has multiple layers‚Äîwhat‚Äôs hidden underneath?', difficulty: 'medium', points: 300, solves: 115, hint: 'Use image editing software to view all layers', file: 'layers.png', solved: false },
    { id: 29, category: 'Forensics', name: 'WiFi Mystery', description: 'Someone captured Wi-Fi packets. Find the password.', difficulty: 'hard', points: 500, solves: 40, hint: 'Crack WPA handshake using aircrack-ng', file: 'wifi.pcap', solved: false },
    { id: 30, category: 'Forensics', name: 'Memory Dump', description: 'Analyze a memory dump to find the flag.', difficulty: 'hard', points: 500, solves: 55, hint: 'Use volatility framework', file: 'dump.mem', solved: false },
    { id: 31, category: 'Forensics', name: 'EXIF Secrets', description: 'The flag might be hidden in image metadata.', difficulty: 'easy', points: 100, solves: 377, hint: 'Inspect EXIF data', file: 'photo2.jpg', solved: false },
    { id: 32, category: 'Forensics', name: 'PDF Inside', description: 'The PDF looks clean but maybe too clean.', difficulty: 'medium', points: 250, solves: 130, hint: 'Check for hidden attachments', file: 'hidden.pdf', solved: false },
    { id: 63, category: 'Forensics', name: 'Browser History', description: 'The user cleared their history, but remnants remain.', difficulty: 'hard', points: 450, solves: 50, hint: 'Analyze browser databases like SQLite', file: 'browser.zip', solved: false },

    // üîê CRYPTOGRAPHY (Total: 15)
    { id: 4, category: 'Cryptography', name: 'Hidden Message', description: 'A mysterious message was intercepted. Decode it using common cryptographic techniques.', difficulty: 'easy', points: 100, solves: 234, hint: 'Try analyzing character frequency and patterns', file: 'Secret.txt', solved: false },
    { id: 6, category: 'Crypto', name: 'Caesar Cipher', description: 'The message has been encrypted with a simple Caesar cipher.', difficulty: 'easy', points: 100, solves: 421, hint: 'Try shifting by different amounts', file: 'message.txt', solved: false },
    { id: 11, category: 'Crypto', name: 'Substitution Madness', description: 'Decrypt the text encoded with a random substitution cipher.', difficulty: 'medium', points: 200, solves: 172, hint: 'Frequency analysis will help you crack it', file: 'cipher.txt', solved: false },
    { id: 12, category: 'Crypto', name: 'RSA Basics', description: 'You‚Äôre given n and e. Can you decrypt the message?', difficulty: 'medium', points: 300, solves: 98, hint: 'Try factoring n to get p and q', file: 'public.pem', solved: false },
    { id: 13, category: 'Crypto', name: 'One-Time Pad?', description: 'Looks like someone reused their one-time pad...', difficulty: 'hard', points: 400, solves: 50, hint: 'If two ciphertexts share the same key, XOR them!', file: 'otp.txt', solved: false },
    { id: 33, category: 'Crypto', name: 'Vigenere Vision', description: 'Decrypt a message encoded with a Vigen√®re cipher.', difficulty: 'medium', points: 200, solves: 187, hint: 'Try finding the key length using Kasiski', file: 'vigenere.txt', solved: false },
    { id: 34, category: 'Crypto', name: 'Base Madness', description: 'It‚Äôs encoded in multiple bases. Decode layer by layer.', difficulty: 'easy', points: 100, solves: 344, hint: 'Try base64, base32, and base85 decoding', file: 'multi.txt', solved: false },
    { id: 35, category: 'Crypto', name: 'Prime Time', description: 'Recover private key using weak primes.', difficulty: 'hard', points: 450, solves: 35, hint: 'Small factors make RSA insecure', file: 'weak.pem', solved: false },
    { id: 36, category: 'Crypto', name: 'Affine Attack', description: 'Decrypt an affine cipher message.', difficulty: 'medium', points: 200, solves: 140, hint: 'Try solving linear equations for a and b', file: 'affine.txt', solved: false },
    { id: 37, category: 'Crypto', name: 'Hash Collision', description: 'Two files, same hash. How?', difficulty: 'hard', points: 500, solves: 27, hint: 'Learn about MD5 collisions', file: 'collision.zip', solved: false },
    { id: 38, category: 'Crypto', name: 'ROT Roller', description: 'Another rotation cipher, but not by 13...', difficulty: 'easy', points: 100, solves: 401, hint: 'Try ROT variations 1‚Äì25', file: 'rot.txt', solved: false },
    { id: 39, category: 'Crypto', name: 'XOR Secrets', description: 'Decrypt XOR-based ciphertext with repeating key.', difficulty: 'medium', points: 300, solves: 110, hint: 'Use frequency analysis on XOR patterns', file: 'xor.bin', solved: false },
    { id: 40, category: 'Crypto', name: 'Double Trouble', description: 'It‚Äôs encrypted twice ‚Äî can you reverse both layers?', difficulty: 'hard', points: 500, solves: 39, hint: 'Decrypt one layer at a time', file: 'double.enc', solved: false },
    { id: 64, category: 'Crypto', name: 'Elliptic Curve', description: 'Exploit a vulnerability in a custom ECC implementation.', difficulty: 'hard', points: 500, solves: 20, hint: 'Look for small subgroup attacks or parameter issues', file: 'ecc.py', solved: false },
    { id: 65, category: 'Crypto', name: 'Padding Oracle', description: 'Exploit a side-channel leak in a block cipher‚Äôs padding scheme.', difficulty: 'hard', points: 450, solves: 31, hint: 'The server response reveals information about padding validity', file: 'server.py', solved: false },

    // üåê WEB (Total: 15)
    { id: 5, category: 'Web', name: 'SQL Injection Basic', description: 'Can you bypass the login page using SQL injection?', difficulty: 'easy', points: 150, solves: 312, hint: 'Try common SQL injection payloads', file: null, solved: false },
    { id: 7, category: 'Web', name: 'XSS Challenge', description: 'Find and exploit the XSS vulnerability to steal the admin cookie.', difficulty: 'medium', points: 300, solves: 98, hint: 'Check input fields for XSS vulnerabilities', file: null, solved: false },
    { id: 14, category: 'Web', name: 'Cookie Monster', description: 'The website hides something interesting in cookies.', difficulty: 'easy', points: 100, solves: 432, hint: 'Inspect cookies in browser dev tools', file: null, solved: false },
    { id: 15, category: 'Web', name: 'Admin Portal', description: 'There‚Äôs an admin portal ‚Äî can you find how to access it?', difficulty: 'medium', points: 250, solves: 130, hint: 'Look for hidden directories and robots.txt', file: null, solved: false },
    { id: 16, category: 'Web', name: 'Command Injection', description: 'The website executes user input. Can you gain shell access?', difficulty: 'hard', points: 450, solves: 65, hint: 'Try chaining commands with ; or &&', file: null, solved: false },
    { id: 41, category: 'Web', name: 'Broken Auth', description: 'The login form doesn‚Äôt handle sessions securely.', difficulty: 'medium', points: 250, solves: 143, hint: 'Check cookie reuse or predictable tokens', file: null, solved: false },
    { id: 42, category: 'Web', name: 'JS Obfuscation', description: 'Deobfuscate JavaScript to find the flag.', difficulty: 'medium', points: 300, solves: 90, hint: 'Use a JS beautifier to analyze the script', file: 'script.js', solved: false },
    { id: 43, category: 'Web', name: 'File Upload', description: 'Bypass upload filter and get shell access.', difficulty: 'hard', points: 450, solves: 52, hint: 'Try renaming extensions or double extensions', file: null, solved: false },
    { id: 44, category: 'Web', name: 'CSRF Token', description: 'Exploit missing CSRF protection to change data.', difficulty: 'medium', points: 300, solves: 76, hint: 'Check if tokens are validated', file: null, solved: false },
    { id: 45, category: 'Web', name: 'Path Traversal', description: 'Access hidden files via directory traversal.', difficulty: 'easy', points: 150, solves: 260, hint: 'Use ../ to move directories', file: null, solved: false },
    { id: 46, category: 'Web', name: 'Server Misconfig', description: 'Server reveals too much info.', difficulty: 'medium', points: 250, solves: 133, hint: 'Inspect headers and /.git folders', file: null, solved: false },
    { id: 47, category: 'Web', name: 'JWT Secrets', description: 'Crack JWT secret to modify payload.', difficulty: 'hard', points: 400, solves: 47, hint: 'Try weak secret guessing', file: null, solved: false },
    { id: 48, category: 'Web', name: 'Redirect Maze', description: 'Find where the redirects lead.', difficulty: 'easy', points: 150, solves: 310, hint: 'Follow 301/302 headers', file: null, solved: false },
    { id: 66, category: 'Web', name: 'SSRF Attack', description: 'Exploit a Server-Side Request Forgery vulnerability to access internal resources.', difficulty: 'hard', points: 500, solves: 34, hint: 'Try accessing the loopback address or metadata service', file: null, solved: false },
    { id: 67, category: 'Web', name: 'DOM XSS', description: 'The vulnerability is client-side, triggered by user input reflected in the DOM.', difficulty: 'medium', points: 350, solves: 71, hint: 'Analyze the source of the data and sinks in the JavaScript code', file: null, solved: false },

    // üîÅ REVERSE ENGINEERING (Total: 13)
    { id: 8, category: 'Reverse', name: 'Assembly Required', description: 'Reverse engineer this binary to find the hidden flag.', difficulty: 'hard', points: 500, solves: 45, hint: 'Use a disassembler like Ghidra or IDA', file: 'binary.exe', solved: false },
    { id: 17, category: 'Reverse', name: 'CrackMe Baby', description: 'This program checks for a secret password. Can you reverse it?', difficulty: 'medium', points: 300, solves: 120, hint: 'Look for string comparisons in the assembly', file: 'crackme', solved: false },
    { id: 18, category: 'Reverse', name: 'Keygen Practice', description: 'Reverse the logic that generates valid keys.', difficulty: 'hard', points: 500, solves: 42, hint: 'Observe arithmetic patterns and constraints', file: 'keygen', solved: false },
    { id: 49, category: 'Reverse', name: 'String Maze', description: 'Find the correct input to pass string checks.', difficulty: 'medium', points: 250, solves: 110, hint: 'Use GDB to trace input comparisons', file: 'maze', solved: false },
    { id: 50, category: 'Reverse', name: 'Obfuscated', description: 'The code is intentionally obfuscated.', difficulty: 'hard', points: 450, solves: 56, hint: 'Simplify control flow and rename variables', file: 'obfus', solved: false },
    { id: 51, category: 'Reverse', name: 'Simple Crack', description: 'A basic password checker written in C.', difficulty: 'easy', points: 100, solves: 270, hint: 'Decompile with Ghidra', file: 'simple', solved: false },
    { id: 52, category: 'Reverse', name: 'Java Reversal', description: 'Reverse a Java JAR file to get the flag.', difficulty: 'medium', points: 250, solves: 103, hint: 'Use JD-GUI', file: 'app.jar', solved: false },
    { id: 53, category: 'Reverse', name: 'Patch Me', description: 'Modify binary to bypass a check.', difficulty: 'hard', points: 400, solves: 63, hint: 'Use hex editing or patch binary', file: 'patchme', solved: false },
    { id: 54, category: 'Reverse', name: 'Python Bytecode', description: 'Decompile Python bytecode.', difficulty: 'easy', points: 150, solves: 260, hint: 'Use uncompyle6', file: 'code.pyc', solved: false },
    { id: 55, category: 'Reverse', name: 'Debugger Challenge', description: 'Analyze runtime behavior to extract flag.', difficulty: 'hard', points: 500, solves: 38, hint: 'Use breakpoints strategically', file: 'debugme', solved: false },
    { id: 56, category: 'Reverse', name: 'Checksum Trap', description: 'Bypass checksum validation to reach the flag.', difficulty: 'medium', points: 300, solves: 89, hint: 'Understand how checksum is verified', file: 'trap', solved: false },
    { id: 68, category: 'Reverse', name: 'DotNet Decode', description: 'Decompile and analyze a .NET executable.', difficulty: 'medium', points: 350, solves: 78, hint: 'Use dnSpy or similar .NET decompiler', file: 'dotnet.exe', solved: false },
    { id: 69, category: 'Reverse', name: 'Anti-Debug', description: 'The binary tries to detect a debugger.', difficulty: 'hard', points: 500, solves: 25, hint: 'Identify the anti-debugging checks and patch them out', file: 'antidebug', solved: false },

    // üí• BINARY EXPLOITATION (Total: 12)
    { id: 19, category: 'Binary Exploitation', name: 'Buffer Overflow 101', description: 'Classic buffer overflow ‚Äî can you overwrite the return address?', difficulty: 'medium', points: 250, solves: 140, hint: 'Use pwntools and check stack size', file: 'overflow.c', solved: false },
    { id: 20, category: 'Binary Exploitation', name: 'Return to Win', description: 'Redirect program flow to the win() function!', difficulty: 'hard', points: 400, solves: 60, hint: 'Use ROP or exact address jumping', file: 'ret2win', solved: false },
    { id: 57, category: 'Binary Exploitation', name: 'Format Fun', description: 'Abuse format string vulnerability.', difficulty: 'medium', points: 250, solves: 120, hint: 'Use %x to leak data', file: 'fmt.c', solved: false },
    { id: 58, category: 'Binary Exploitation', name: 'Stack Smash', description: 'Smash the stack and hijack control.', difficulty: 'hard', points: 450, solves: 47, hint: 'Find buffer length first', file: 'smash.c', solved: false },
    { id: 59, category: 'Binary Exploitation', name: 'Canary Bypass', description: 'Bypass stack canary protections.', difficulty: 'hard', points: 500, solves: 32, hint: 'Leak canary before overwrite', file: 'canary', solved: false },
    { id: 60, category: 'Binary Exploitation', name: 'ROP Chain', description: 'Build a ROP chain to execute /bin/sh.', difficulty: 'hard', points: 500, solves: 28, hint: 'Find gadgets using ROPgadget', file: 'rop', solved: false },
    { id: 61, category: 'Binary Exploitation', name: 'Use After Free', description: 'Exploit dangling pointers.', difficulty: 'medium', points: 300, solves: 73, hint: 'Understand heap management', file: 'uaf', solved: false },
    { id: 62, category: 'Binary Exploitation', name: 'Heap Overflow', description: 'Overflow the heap and control flow.', difficulty: 'hard', points: 450, solves: 38, hint: 'Exploit glibcs internal heap structures', file: 'heap.c', solved: false },
    { id: 70, category: 'Binary Exploitation', name: 'Shellcode Practice', description: 'Inject and execute custom shellcode.', difficulty: 'medium', points: 350, solves: 91, hint: 'Ensure the stack is executable (NX disabled)', file: 'shellcode', solved: false },
    { id: 71, category: 'Binary Exploitation', name: 'GOT Overwrite', description: 'Exploit the Global Offset Table to hijack function calls.', difficulty: 'hard', points: 500, solves: 24, hint: 'Requires a leak and writing to an arbitrary address', file: 'got', solved: false },
    { id: 72, category: 'Binary Exploitation', name: 'Integer Overflow', description: 'Exploit an integer overflow for a buffer size calculation.', difficulty: 'medium', points: 300, solves: 85, hint: 'Look for unsigned integer operations leading to unexpected sizes', file: 'int_ovf.c', solved: false },
    { id: 73, category: 'Binary Exploitation', name: 'PIE Bypass', description: 'Bypass Position Independent Executable (PIE) protection.', difficulty: 'hard', points: 400, solves: 58, hint: 'Need to leak a PIE address first', file: 'pie', solved: false },
    
    // üí° MISCELLANEOUS (Total: 8)
    { id: 21, category: 'Misc', name: 'Warmup', description: 'Just a quick one to get you started! The flag is hidden in the challenge description.', difficulty: 'easy', points: 50, solves: 500, hint: 'Read the description very carefully.', file: null, solved: false },
    { id: 22, category: 'Misc', name: 'Logic Puzzle', description: 'A series of yes/no questions to solve a logical riddle.', difficulty: 'medium', points: 200, solves: 150, hint: 'Think about Boolean algebra and constraints.', file: 'puzzle.txt', solved: false },
    { id: 23, category: 'Misc', name: 'Netcat Wizard', description: 'Interact with a remote server over netcat to solve a challenge.', difficulty: 'easy', points: 100, solves: 320, hint: 'Use `nc <host> <port>` and look for a sequence of operations.', file: null, solved: false },
    { id: 74, category: 'Misc', name: 'Steganography Fun', description: 'The flag is hidden in the least significant bits of an image.', difficulty: 'medium', points: 250, solves: 125, hint: 'Try LSB tools like zsteg or stegsolve.', file: 'stego.png', solved: false },
    { id: 75, category: 'Misc', name: 'Scripting Starter', description: 'A simple server requires a script to solve the math problems it gives you quickly.', difficulty: 'medium', points: 300, solves: 105, hint: 'Use a programming language (Python/pwntools) to automate the interaction.', file: 'server.py', solved: false },
    { id: 76, category: 'Misc', name: 'QR Code Chaos', description: 'The flag is split across multiple, corrupted QR codes.', difficulty: 'hard', points: 400, solves: 68, hint: 'Piece the images together or use an advanced error-correcting reader.', file: 'qr_codes.zip', solved: false },
    { id: 77, category: 'Misc', name: 'Google Dorking', description: 'The flag is publicly indexed but hard to find.', difficulty: 'easy', points: 150, solves: 280, hint: 'Use specific search operators to narrow down the results.', file: null, solved: false },
    { id: 78, category: 'Misc', name: 'Mandelbrot', description: 'The challenge description is a set of coordinates. Find what they reveal.', difficulty: 'hard', points: 500, solves: 40, hint: 'Plot the coordinates to find a hidden image or message.', file: 'coords.txt', solved: false }
];

